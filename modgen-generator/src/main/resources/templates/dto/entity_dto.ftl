<#macro underlinesToCamelCase inString><#local strArray = inString?split("_")><#list strArray as item><#if item?index == 0>${item}<#else>${item?cap_first}</#if></#list></#macro>
<#assign aDateTime = .now>
<#assign aDate = aDateTime?date>
/*
 * 
 * Nourreddine HOUARI CONFIDENTIAL
 * 
 * All information contained herein is, and remains
 * the property of Nourreddine HOUARI and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Nourreddine HOUARI
 * and its suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Nourreddine HOUARI.
 * 
 * [2017] Nourreddine HOUARI SA
 * All Rights Reserved.
 */

/*
 * Author   : Nourreddine HOUARI nourreddine.houari@
 *     Koneru, Venkaiah Chowdary VenkaiahChowdary.Koneru@
 *
 * Date     :  ${aDate?string.medium} 
 * 
 * File     :  ${entity.name?cap_first}.java 
 * 
 * Copyright (c) ${aDate?string.yyyy} houari_nourreddine Sdn Bhd, All rights reserved.                   
 */
 
package ${package};

import java.util.Date;
import java.util.List;

import com.fasterxml.jackson.annotation.JsonProperty;
<#list entity.attributes as attribute>
<#if attribute.reference>
import ${package}.${attribute.type}${dtoSuffix};
<#elseif attribute.enumerate>
import ${entityPackage}.${attribute.type};
</#if>
<#if attribute.hasAnnotation("LOCATION")>
import com.vividsolutions.jts.geom.Point;
</#if>
</#list>
<#if entity.hasAnnotation("EXTENDABLE")>
import ${entityPackage}.Extension;
</#if>
import lombok.Data;

/**
 * THIS FILE IS AUTOMATICALLY GENERATED
 *     >> DO NOT EDIT MANUALLY <<
 * <br><br>
 * Generated by : ${generator}<br>
 * Version      : ${version}<br>
 * Date         : ${aDate?string.medium}<br>
 * <br>
 * @author Nourreddine HOUARI nourreddine.houari@
 * @author Koneru, Venkaiah Chowdary VenkaiahChowdary.Koneru@
 *
 */
@Data
public class ${entity.name}${dtoSuffix} {
 
  <#list entity.attributes as attribute>
  // ${attribute.name}
  @JsonProperty("${attribute.name}") 
  <#if attribute.reference>
  <#if attribute.multiplicity==1 && attribute.oppositeMultiplicity==1>
  private ${attribute.type}${dtoSuffix} ${attribute.name};
  <#elseif attribute.multiplicity==1 && attribute.oppositeMultiplicity==-1>
  private ${attribute.type}${dtoSuffix} ${attribute.name};
  <#elseif attribute.oppositeMultiplicity==1>
  private List<${attribute.type}${dtoSuffix}> ${attribute.name};
    <#else>
  private List<${attribute.type}${dtoSuffix}> ${attribute.name};
  </#if>
  <#elseif attribute.enumerate>
  private ${attribute.type} ${attribute.name};
  <#elseif attribute.type == "Date">
  private ${attribute.type} ${attribute.name};
  <#elseif attribute.type == "String" && attribute.hasAnnotation("LOCATION")>
  private Point ${attribute.name};
  <#else>
  private ${attribute.type} ${attribute.name};
  </#if>
  </#list>
  <#list entity.relations as relation>
  <#if relation.multiplicity=1>
  <#elseif relation.oppositeMultiplicity=1>
  private ${relation.model.name}${dtoSuffix} ${relation.model.name?uncap_first}_${relation.relationName?uncap_first};
  <#else>
  private List<${relation.model.name}${dtoSuffix}> ${relation.model.name?uncap_first}_${relation.relationName?uncap_first};
  </#if>
  </#list>
  <#if entity.hasOneOfAnnotation(["AUDIT_AWARE", "SYNCH_SERVER", "SYNCH_CLIENT"])>
  // Creation date
  private Date createdDate;
  // Modification date
  private Date modifiedDate;
  // Creation user
  private String createdBy;
  // Last modification user
  private String modifiedBy;
  </#if>
  <#if entity.hasAnnotation("EXTENDABLE")>
  // Extension field
  private Extension extension;
  </#if>
  <#if entity.hasAnnotation("VERSIONABLE")>
  // Object version number.
  private long version;
  </#if>
}
