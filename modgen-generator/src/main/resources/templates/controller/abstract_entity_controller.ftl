<#assign aDateTime = .now>
<#assign aDate = aDateTime?date>
/*
 * Author   :	Nourreddine HOUARI <nourreddine.houari@>
 * 				Koneru, Venkaiah Chowdary <VenkaiahChowdary.Koneru@> 
 *
 * Date     : 	${aDate?string.medium} 
 * 
 * File     : 	AbstractEntityController.java 
 * 
 * Copyright (c) ${aDate?string.yyyy} houari_nourreddine Sdn Bhd, All rights reserved.                   
 */
package ${package};

import java.util.List;
import java.util.Map;

import org.springframework.http.MediaType;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.hin.gssd.metis.commonsweb.controller.AbstractController;
import com.hin.gssd.metis.dto.EventBusDTO;
import com.hin.gssd.metis.dto.ResponseDTO;
import com.hin.gssd.metis.enums.EntityState;
import com.hin.gssd.metis.enums.OutcomeStatus;
import com.hin.gssd.metis.support.CommonsUtil;

import ${servicePackage}.GenericEntityService;

/**
 * THIS FILE IS AUTOMATICALLY GENERATED
 *     >> DO NOT EDIT MANUALLY <<
 * <br><br>
 * Generated by : ${generator}<br>
 * Version      : ${version}<br>
 * Date         : ${aDate?string.medium}<br>
 * <br>
 * @param <DTO>
 * @param <T>
 * 
 * @author Nourreddine HOUARI <nourreddine.houari@>
 * @author Koneru, Venkaiah Chowdary <VenkaiahChowdary.Koneru@>
 *
 */
public abstract class AbstractEntityController<DTO extends EventBusDTO, T> extends AbstractController { 
	
	/**
	 * Create a new entity.
	 * @param dto
	 */
	@RequestMapping(
		path = "/", 
		produces = MediaType.APPLICATION_JSON_VALUE, 
		method = RequestMethod.POST)
	@ResponseBody
	public ResponseDTO create(@RequestBody DTO dto) {
		Map<String, String> errors = getService().create(dto);
		
		ResponseDTO responseDTO = new ResponseDTO();
		if(!CommonsUtil.isEmpty(errors)) {
			responseDTO.setStatus(OutcomeStatus.FAILURE);
			responseDTO.setErrors(errors);
		} else {
			if(dto.getEntityState().equals(EntityState.NEW)){
				responseDTO.setSavedDTO(dto);
			}
		}
		
		return responseDTO;
	}
	
	/**
	 * Persists bulk entities.
	 * 
	 * @param dtoList
	 */
	@RequestMapping(
		path = "/bulk", 
		produces = MediaType.APPLICATION_JSON_VALUE, 
		method = RequestMethod.POST)
	@ResponseBody
	public ResponseDTO create(@RequestBody List<DTO> dtoList) {
		for (DTO dto : dtoList) {
			ResponseDTO responseDTO = create(dto);
	    	if (!responseDTO.getStatus().equals(OutcomeStatus.SUCCESS)) {
				return responseDTO;
	    	}
		}
		
		return new ResponseDTO();
	}
	
	/**
	 * returns the number of records on the persistence layer.
	 */
	@RequestMapping(
			path = "/count", 
			produces = MediaType.APPLICATION_JSON_VALUE, 
			method = RequestMethod.GET)
	@ResponseBody
	public long count() {
		return getService().count();
	}
	
	/**
	 * must override this to set the service class
	 */
	protected abstract GenericEntityService getService();
}