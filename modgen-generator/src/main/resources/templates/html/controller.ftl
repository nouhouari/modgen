/*
 * @author Nourreddine HOUARI <nourreddine.houari@sicpa.com>
 * @author Venkaiah Chowdary Koneru <VenkaiahChowdary.Koneru@sicpa.com>
 * Generated by : ${generator}
 * Version      : ${version}
 * Date         : ${today}
 */

'use strict';

/**
 * @ngdoc function
 * @name ${angularModule}.controller:${entity.name?cap_first}Ctrl
 * @description
 * # ${entity.name?cap_first}Ctrl
 * Controller of the ${angularModule}
 */
angular.module('${angularModule}')
  .controller('${entity.name?cap_first}Ctrl', function ($scope, $http, $route, $location, ${entity.name?cap_first}Service, ajaxService, APPCONSTANTS) {
  
    //Initialize the variable to store all the entities
    $scope.${entity.name?lower_case}s = [];
    //Initialize the default total
    $scope.total${entity.name?cap_first}s = 0;
    //Default number of object per page
    $scope.${entity.name?lower_case}sPerPage = APPCONSTANTS.DEFAULT_PAGE_SIZE;
    //Initialize the object used in create/update form
    //$scope.${entity.name?lower_case} = new Object();
    
    //Initialize the current page
    $scope.${entity.name?lower_case}Pagination = {
        current: 1
    };
    
    //Convert a date in ISO string format
    $scope.convertDate = function(timestamp){
       if(timestamp != undefined){
          return new Date(timestamp).toLocaleString();
       }
    }
    
    //Enums
    <#list entity.attributes as attribute>
    <#if attribute.enumerate> 
    $scope.${attribute.name}_items = [
    <#list attribute.litterals as litteral>
    {
        label: '${litteral}'
    }<#sep>,</#sep>
    </#list>
    ];
    </#if>
    </#list>
    
     //Query params
    $scope.query;
    <#list searchableAttributes as attribute> 
    <#if attribute.type=="Byte" || attribute.type=="Short"|| attribute.type=="Integer"|| attribute.type=="Long"|| attribute.type=="Float"|| attribute.type=="Double"|| attribute.type=="Date">
    $scope.query${entity.name?cap_first}_from${attribute.name?cap_first} = '';
    $scope.query${entity.name?cap_first}_to${attribute.name?cap_first} = '';
    </#if>
    $scope.query${entity.name?cap_first}_${attribute.name?uncap_first} = '';
    </#list>
    
    //Refresh the query and call webservice
    $scope.refresh${entity.name?cap_first}Query = function() {
        $scope.build${entity.name?cap_first}Query();
        //console.log("Query : " + $scope.query);
        $scope.get${entity.name?cap_first}ResultsPage( $scope.${entity.name?lower_case}Pagination.current);
    }
    
    //Build the query using the search parameters
    $scope.build${entity.name?cap_first}Query = function(){
        $scope.query${entity.name?cap_first} = '';
        <#list searchableAttributes as attribute> 
        <#if attribute.type=="Byte" || attribute.type=="Short"|| attribute.type=="Integer"|| attribute.type=="Long"|| attribute.type=="Float"|| attribute.type=="Double"|| attribute.type=="Date">
    	if($scope.query${entity.name?cap_first}_from${attribute.name?cap_first} !== '' ){
            $scope.query${entity.name?cap_first} += '&from${attribute.name?cap_first}='+$scope.query${entity.name?cap_first}_from${attribute.name?cap_first};
        }
        if($scope.query${entity.name?cap_first}_to${attribute.name?cap_first} != '' ){
            $scope.query${entity.name?cap_first} += '&to${attribute.name?cap_first}='+$scope.query${entity.name?cap_first}_to${attribute.name?cap_first};
        }
    	</#if>
		if($scope.query${entity.name?cap_first}_${attribute.name?uncap_first} != '' ){
            $scope.query${entity.name?cap_first} += '&${attribute.name?uncap_first}='+$scope.query${entity.name?cap_first}_${attribute.name?uncap_first};
        }
        </#list>
    }

	//Load new page
    $scope.page${entity.name?cap_first}Changed = function(newPage) {
        $scope.get${entity.name?cap_first}ResultsPage(newPage);
    };

	//Query the service with search parameters
    $scope.get${entity.name?cap_first}ResultsPage = function(pageNumber) {
    	var sentQuery = ($scope.query${entity.name?cap_first} != undefined)?$scope.query${entity.name?cap_first}:'';
        
        if($scope.${entity.name?lower_case}sPerPage == 0 || typeof($scope.${entity.name?lower_case}sPerPage) == "undefined" || $scope.${entity.name?lower_case}sPerPage == null){
        	$scope.${entity.name?lower_case}sPerPage = 1;
        }
        <#list entity.relations as relation>
        if($scope.parent${relation.model.name?cap_first}){
          
    	  //Find by ${relation.model.name}
          ${entity.name?cap_first}Service.fetchBy${relation.model.name}($scope.parent${relation.model.name?cap_first},pageNumber-1, $scope.${entity.name?lower_case}sPerPage, sentQuery, 
        		function(result, status) {
                	$scope.${entity.name?lower_case}s = result.data.list;
                	$scope.total${entity.name?cap_first}s = result.data.count;
             	},
             	function(result) {
             	});      	  
       }
       </#list>
       else{
          ${entity.name?cap_first}Service.fetchAllByQuery(pageNumber-1, $scope.${entity.name?lower_case}sPerPage, sentQuery, 
        		function(result, status) {
                	$scope.${entity.name?lower_case}s = result.data.list;
                	$scope.total${entity.name?cap_first}s = result.data.count;
             	},
             	function(result) {
             	});  
        }
    }
    
    //Delete ${entity.name?cap_first}
    $scope.delete${entity.name?cap_first} = function(${entity.name?lower_case}Obj){
    	 $scope.delete${entity.name?cap_first}Obj = ${entity.name?lower_case}Obj;
        $('#delete${entity.name?cap_first}Confirm').modal('show');
    }
    
    //Confirm deletion
    $scope.confirmDelete${entity.name?cap_first} = function(){
        $('#delete${entity.name?cap_first}Confirm').modal('hide');
        
        ${entity.name?cap_first}Service.delete${entity.name?cap_first}($scope.delete${entity.name?cap_first}Obj, function(result){
                $scope.refresh${entity.name?cap_first}Query();    
            });
    }
    
    //Save ${entity.name?cap_first}
    $scope.save${entity.name?cap_first} = function(){
    	//console.log($scope.${entity.name?lower_case});
    	${entity.name?cap_first}Service.save${entity.name?cap_first}($scope.${entity.name?lower_case}Obj, function(result, status){
    				if(result.data.status === APPCONSTANTS.RESPONSE_SUCCESS) {
    					$location.path("/${entity.name?lower_case}"); 
    				} else {
    					
    				}
    			},
    			function(result){
    			});
    }
    
    //Edit ${entity.name?cap_first}
    $scope.edit${entity.name?cap_first} = function(${entity.name?lower_case}Obj){
      $location.path('/${entity.name?lower_case}/edit'<#list primaryAttributes as attribute>+'/'+${entity.name?lower_case}Obj.${attribute.name?uncap_first}</#list>);
    }
    
    //Create new ${entity.name?cap_first}
    $scope.new${entity.name?cap_first} = function(){
      $location.path('/${entity.name?lower_case}/new'); 
    }
    
    //View ${entity.name?cap_first}
    $scope.view${entity.name?cap_first} = function(${entity.name?lower_case}Obj){
      $location.path('/${entity.name?lower_case}/view'<#list primaryAttributes as attribute>+'/'+${entity.name?lower_case}Obj.${attribute.name?uncap_first}</#list>);
    }
    
    //Load ${entity.name?cap_first}
    $scope.load${entity.name?cap_first} = function(<#list primaryAttributes as attribute>${attribute.name?uncap_first}<#sep>, </#sep></#list>){
    	${entity.name?cap_first}Service.findByPrimaryKey(<#list primaryAttributes as attribute>${attribute.name?uncap_first}<#sep>, </#sep></#list>, 
    			function(result, status){
    	 			$scope.${entity.name?lower_case}Obj = result.data;
    	 		},
    	 		function(result) {
    	 		});
    }
    
    //Load entity if any
    <#list primaryAttributes as attribute>
 	var ${attribute.name?uncap_first} = $route.current.params.${attribute.name?uncap_first};
    </#list>
   	if(<#list primaryAttributes as attribute>${attribute.name?uncap_first}<#sep> && </#sep></#list>){
   		$scope.embedded${entity.name} = true;
   		$scope.parent${entity.name?cap_first} = {<#list primaryAttributes as attribute>"${attribute.name?uncap_first}":${attribute.name?uncap_first}</#list>};
        $scope.load${entity.name?cap_first}(<#list primaryAttributes as attribute>${attribute.name?uncap_first}<#sep> , </#sep></#list>);
    }else{
    	$scope.embedded${entity.name} = false;
    }
    
    $scope.get${entity.name?cap_first}ResultsPage(1);
 
  });