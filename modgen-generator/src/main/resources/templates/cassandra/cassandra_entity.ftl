<#macro underlinesToCamelCase inString><#local strArray = inString?split("_")><#list strArray as item><#if item?index == 0>${item}<#else>${item?cap_first}</#if></#list></#macro>
<#assign aDateTime = .now>
<#assign aDate = aDateTime?date>
<#assign pkCount = 0>
<#assign ccCount = 0>
/*
 * Author   :	Nourreddine HOUARI <nourreddine.houari@>
 * 				Koneru, Venkaiah Chowdary <VenkaiahChowdary.Koneru@> 
 *
 * Date     : 	${aDate?string.medium} 
 * 
 * File     : 	${entity.name?cap_first}.java 
 * 
 * Copyright (c) ${aDate?string.yyyy} houari_nourreddine Sdn Bhd, All rights reserved.                   
 */
package ${package};

import java.util.Date;
import java.util.List;

<#if UDT>
import com.datastax.driver.mapping.annotations.UDT;
<#else>
import com.datastax.driver.mapping.annotations.Table;
import com.datastax.driver.mapping.annotations.Column;
import com.datastax.driver.mapping.annotations.PartitionKey;
import com.datastax.driver.mapping.annotations.ClusteringColumn;
</#if>

/**
 * THIS FILE IS AUTOMATICALLY GENERATED
 *     >> DO NOT EDIT MANUALLY <<
 * <br><br>
 * Generated by : ${generator}<br>
 * Version      : ${version}<br>
 * Date         : ${aDate?string.medium}<br>
 * <br>
 * @author Nourreddine HOUARI <nourreddine.houari@>
 * @author Koneru, Venkaiah Chowdary <VenkaiahChowdary.Koneru@>
 *
 */
<#if UDT>
@UDT(name="${entity.name?lower_case}")
<#else>
@Table(name="${entity.name?lower_case}")
</#if>
public class ${entity.name?cap_first} {
 	
 	<#list attributes as attribute> 
 	<#if attribute.reference>
 	<#if attribute.model.hasAnnotation("UDT")>
 	
 	@Column(name="${attribute.name?uncap_first}")
 	private <#if attribute.multiplicity ==-1>List<</#if>${attribute.type}<#if attribute.multiplicity ==-1>></#if> <@underlinesToCamelCase attribute.name?uncap_first/>;
 	<#elseif !UDT>
 	<#if !attribute.containment>
 	<#list attribute.model.attributes as foreignAttribute>
    <#if foreignAttribute.hasAnnotation("PK") || foreignAttribute.hasAnnotation("CC")>
    
    @Column(name="${attribute.name?uncap_first}_${foreignAttribute.name?uncap_first}")
 	private ${foreignAttribute.type} <@underlinesToCamelCase attribute.name?uncap_first/><@underlinesToCamelCase foreignAttribute.name?cap_first/>;
 	</#if>
 	</#list>
 	</#if>
 	</#if>
 	<#elseif attribute.hasAnnotation("PK")>
 	
 	@PartitionKey(value=${pkCount})
    @Column(name="${attribute.name?uncap_first}")
    <#assign pkCount = pkCount + 1>
    private ${attribute.type} <@underlinesToCamelCase attribute.name?uncap_first/>;
    <#elseif attribute.hasAnnotation("CC")>
    
    @ClusteringColumn(value=${ccCount})
	@Column(name="${attribute.name?uncap_first}")<#assign ccCount = ccCount + 1>
	private ${attribute.type} <@underlinesToCamelCase attribute.name?uncap_first/>;
	<#else>
	<#if !UDT>
	
	@Column(name="${attribute.name?uncap_first}")
	</#if>
	private ${attribute.type} <@underlinesToCamelCase attribute.name?uncap_first/>;
	</#if>
    </#list>  
    <#if !UDT>   
    <#list relations as relation>
    <#if relation.containment>
    <#list relation.model.attributes as foreignAttribute>
    <#if foreignAttribute.hasAnnotation("PK") || foreignAttribute.hasAnnotation("CC")>
    
    @Column(name="${relation.model.name?uncap_first}_${foreignAttribute.name?uncap_first}")
    private ${foreignAttribute.type} ${relation.model.name?uncap_first}${foreignAttribute.name?cap_first};
    </#if>
    </#list>
    </#if>
    </#list>
    </#if>
    
	<#list attributes as attribute>
	<#if attribute.reference>
	<#if attribute.model.hasAnnotation("UDT")>
	
	/**
	 * @return the `<em><@underlinesToCamelCase attribute.name?uncap_first/></em>`
	 */
	public <#if attribute.multiplicity ==-1>List<</#if>${attribute.type}<#if attribute.multiplicity ==-1>></#if> get<@underlinesToCamelCase attribute.name?cap_first/>() {
		return <@underlinesToCamelCase attribute.name?uncap_first/>;
	}
	
	/**
	 * @param <@underlinesToCamelCase attribute.name?uncap_first/> the `<em><@underlinesToCamelCase attribute.name?uncap_first/></em>` to set
	 */
	public void set<@underlinesToCamelCase attribute.name?cap_first/>(<#if attribute.multiplicity ==-1>List<</#if>${attribute.type}<#if attribute.multiplicity ==-1>></#if> <@underlinesToCamelCase attribute.name?uncap_first/>) {
		this.<@underlinesToCamelCase attribute.name?uncap_first/> = <@underlinesToCamelCase attribute.name?uncap_first/>;		
	}
	<#elseif !UDT>
	<#if !attribute.containment>
	<#list attribute.model.attributes as foreignAttribute>
    <#if foreignAttribute.hasAnnotation("PK") || foreignAttribute.hasAnnotation("CC")>
    
	/**
	 * @return the `<em><@underlinesToCamelCase attribute.name?uncap_first/><@underlinesToCamelCase foreignAttribute.name?cap_first/></em>`
	 */
	public ${foreignAttribute.type} get<@underlinesToCamelCase attribute.name?cap_first/><@underlinesToCamelCase foreignAttribute.name?cap_first/>() {
		return <@underlinesToCamelCase attribute.name?uncap_first/><@underlinesToCamelCase foreignAttribute.name?cap_first/>;
	}
	
	/**
	 * @param <@underlinesToCamelCase attribute.name?uncap_first/><@underlinesToCamelCase foreignAttribute.name?cap_first/> the `<em><@underlinesToCamelCase attribute.name?uncap_first/><@underlinesToCamelCase foreignAttribute.name?cap_first/></em>` to set
	 */
	public void set<@underlinesToCamelCase attribute.name?cap_first/><@underlinesToCamelCase foreignAttribute.name?cap_first/>(${foreignAttribute.type} <@underlinesToCamelCase attribute.name?uncap_first/><@underlinesToCamelCase foreignAttribute.name?cap_first/>) {
		this.<@underlinesToCamelCase attribute.name?uncap_first/><@underlinesToCamelCase foreignAttribute.name?cap_first/> = <@underlinesToCamelCase attribute.name?uncap_first/><@underlinesToCamelCase foreignAttribute.name?cap_first/>;		
	}
	</#if>
	</#list>
	</#if>
	</#if>
	<#elseif attribute.type == "boolean">
	
	/**
	 * @return the `<em><@underlinesToCamelCase attribute.name?uncap_first/></em>`
	 */
	public ${attribute.type} is<@underlinesToCamelCase attribute.name?cap_first/>() {
		return <@underlinesToCamelCase attribute.name?uncap_first/>;
	}
	
	/**
	 * @param <@underlinesToCamelCase attribute.name?uncap_first/> the `<em><@underlinesToCamelCase attribute.name?uncap_first/></em>` to set
	 */
	public void set<@underlinesToCamelCase attribute.name?cap_first/>(${attribute.type} <@underlinesToCamelCase attribute.name?uncap_first/>) {
		this.<@underlinesToCamelCase attribute.name?uncap_first/> = <@underlinesToCamelCase attribute.name?uncap_first/>;		
	}
	<#else>
	
	/**
	 * @return the `<em><@underlinesToCamelCase attribute.name?uncap_first/></em>`
	 */
	public ${attribute.type} get<@underlinesToCamelCase attribute.name?cap_first/>() {
		return <@underlinesToCamelCase attribute.name?uncap_first/>;
	}
	
	/**
	 * @param <@underlinesToCamelCase attribute.name?uncap_first/> the `<em><@underlinesToCamelCase attribute.name?uncap_first/></em>` to set
	 */
	public void set<@underlinesToCamelCase attribute.name?cap_first/>(${attribute.type} <@underlinesToCamelCase attribute.name?uncap_first/>) {
		this.<@underlinesToCamelCase attribute.name?uncap_first/> = <@underlinesToCamelCase attribute.name?uncap_first/>;		
	}
	</#if>
	</#list>
	<#if !UDT>
	<#list relations as relation>
	<#if relation.containment>
    <#list relation.model.attributes as foreignAttribute><#if foreignAttribute.hasAnnotation("PK") || foreignAttribute.hasAnnotation("CC")>
    
    /**
	 * @return the `<em><@underlinesToCamelCase relation.model.name?uncap_first/><@underlinesToCamelCase foreignAttribute.name?cap_first/></em>`
	 */
	public ${foreignAttribute.type} get<@underlinesToCamelCase relation.model.name?cap_first/><@underlinesToCamelCase foreignAttribute.name?cap_first/>() {
		return <@underlinesToCamelCase relation.model.name?uncap_first/><@underlinesToCamelCase foreignAttribute.name?cap_first/>;
	}
	
	/**
	 * @param <@underlinesToCamelCase relation.model.name?uncap_first/><@underlinesToCamelCase foreignAttribute.name?cap_first/> the `<em><@underlinesToCamelCase relation.model.name?uncap_first/><@underlinesToCamelCase foreignAttribute.name?cap_first/></em>` to set
	 */
	public void set<@underlinesToCamelCase relation.model.name?cap_first/><@underlinesToCamelCase foreignAttribute.name?cap_first/>(${foreignAttribute.type} <@underlinesToCamelCase relation.model.name?uncap_first/><@underlinesToCamelCase foreignAttribute.name?cap_first/>) {
		this.<@underlinesToCamelCase relation.model.name?uncap_first/><@underlinesToCamelCase foreignAttribute.name?cap_first/> = <@underlinesToCamelCase relation.model.name?uncap_first/><@underlinesToCamelCase foreignAttribute.name?cap_first/>;		
	}
	</#if>
    </#list>
    </#if>
    </#list>
    </#if>
}