/*
 * 
 * Nourreddine HOUARI CONFIDENTIAL
 * 
 * All information contained herein is, and remains
 * the property of Nourreddine HOUARI and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Nourreddine HOUARI
 * and its suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Nourreddine HOUARI.
 * 
 * [2017] Nourreddine HOUARI SA
 * All Rights Reserved.
 */
 
//
// THIS FILE IS AUTOMATICALLY GENERATED
//     >> DO NOT EDIT MANUALLY <<
//
// @author Nourreddine HOUARI (nourreddine.houari@)
// Generated by : Protobuf generator.
// Version      : 0.0.1
// Date         : Tue Jul 13 10:38:41 MYT 2021
//
syntax = "proto3";

package com.sicpa.modgen.test.inspection.api.rpc;

option java_multiple_files = true;
option java_package = "com.sicpa.modgen.test.inspection";
option java_outer_classname = "ModelProtoBuf";

import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";

import "com/sicpa/modgen/test/inspection/api/rpc/Page.proto";



 //////////////////
 // Campaign
 //////////////////

  // Define Campaign message
  message Campaign {
	// String id
	string id = 1;
	// String name
	string name = 2;
	// Date from
	int64 from = 3;
	// Date to
	int64 to = 4;
    
    
  }
  
  
  /*
   * Result save response with status and validation map.
   */
  message CampaignSaveResult {
    enum CampaignSaveStatusEnum {
      SUCCESS = 0;
      FAILURE = 1;
      EXCEPTION = 3;
    }
    CampaignSaveStatusEnum status = 1; // one of the enums from the above status. Default is SUCCESS.
    Campaign entityProto = 2; // request object that is received
    map<string, string> errors = 3; // a key-value pair of errors with property names as keys and corresponding error codes as values.
  }

  /*
   * Define the query parameters for a Campaign
   * entity.
   */
  message CampaignQuery {
     string sortParams = 1;
     string name = 2;
  }
  
  /*
   * Define the quick query for a Campaign
   * entity.
   */
  message CampaignQuickSearchQuery {
    string quickSearchQuery = 1;
    string sortParams = 2;
     string name = 3;
  }
  
  /*
   * Campaign result page that contains the result of 
   * a request.
   */
  message CampaignResultPage{
    // Amount of elements
    uint32 totalElements  = 1;
    // Number of current page
    uint32 number  = 2;
    // Number of elements in the current page
    uint64 numberOfElements = 3;
    // Page size
    uint64 size = 4;
    // Total number of pages
    uint64 totalPages = 5;
    // Element list
    repeated Campaign entities = 6;
  }
  
  /*
   * Request that contains the pagination information and
   * the query parameters.
   */
   message CampaignRequest {
     Page page = 1;
     CampaignQuery query = 2;
   }
   
  /*
   * Request that contains the pagination information and
   * the query parameters for a quick search.
   */
   message CampaignQuickSearchRequest {
     Page page = 1;
     CampaignQuickSearchQuery query = 2;
   }
     
   /*
    * Entities list
    */ 
   message CampaignList {
    repeated Campaign entities = 1;
   }
   
    

  // CRUD and Search services
  service CampaignCRUDServices{
    
    // Create Campaign
    // @param  : campaign to create.
    // @return : the created campaign or ALREADY_EXISTS
    rpc SaveCampaign(Campaign) returns (CampaignSaveResult);

    // Read Campaign by id
    // @param  : campaign id to read.
    // @return : the campaign or NOT_FOUND
    rpc ReadCampaign(google.protobuf.StringValue) returns (Campaign);
    
    // Update Campaign
    // @param  : campaign to update.
    // @return : the updated campaign or NOT_FOUND
    rpc UpdateCampaign (Campaign) returns (Campaign);
    
    // Delete Campaign by id
    // @param  : campaign id to delete.
    // @return : empty message or NOT_FOUND
    rpc DeleteCampaign(google.protobuf.StringValue) returns (google.protobuf.Empty);
    
    // Get all Campaign 
    // @param  : CampaignRequest search request.
    // @return : list of Campaign
    rpc GetAllCampaign(CampaignRequest) returns (CampaignResultPage);
    
    // Get all entities
    // @param : No param
    // @return : list of Campaign
    rpc GetAllCampaigns(google.protobuf.Empty) returns (CampaignList);
    
    // Quick search Campaign 
    // @param  : CampaignQuickSearchRequest quick search request.
    // @return : list of Campaign that match the query
    rpc QuickSearchCampaign(CampaignQuickSearchRequest) returns (CampaignResultPage);
    
    // Count entities
    // @param : No param
    // @return : number of Campaign
    rpc CountCampaign(google.protobuf.Empty) returns (google.protobuf.Int64Value);
    
  }
  
