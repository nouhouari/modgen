/*
 * 
 * SICPA CONFIDENTIAL
 * 
 * All information contained herein is, and remains
 * the property of SICPA and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to SICPA
 * and its suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from SICPA.
 * 
 * [2017] SICPA SA
 * All Rights Reserved.
 */
 
//
// THIS FILE IS AUTOMATICALLY GENERATED
//     >> DO NOT EDIT MANUALLY <<
//
// @author Nourreddine HOUARI (nourreddine.houari@)
// Generated by : Protobuf generator.
// Version      : 0.0.1
// Date         : Mon Mar 07 10:33:34 MYT 2022
//
syntax = "proto3";

package com.sicpa.modgen.mavenplugin.test.api.rpc;

option java_multiple_files = true;
option java_package = "com.sicpa.modgen.mavenplugin.test";
option java_outer_classname = "ModelProtoBuf";

import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";

import "com/sicpa/modgen/mavenplugin/test/api/rpc/Page.proto";



 //////////////////
 // Activation
 //////////////////

  // Define Activation message
  message Activation {
	// String id
	string id = 1;
	// String name
	string name = 2;
    
    
  }
  
  
  /*
   * Result save response with status and validation map.
   */
  message ActivationSaveResult {
    enum ActivationSaveStatusEnum {
      SUCCESS = 0;
      FAILURE = 1;
      EXCEPTION = 3;
    }
    ActivationSaveStatusEnum status = 1; // one of the enums from the above status. Default is SUCCESS.
    Activation entityProto = 2; // request object that is received
    map<string, string> errors = 3; // a key-value pair of errors with property names as keys and corresponding error codes as values.
  }

  /*
   * Define the query parameters for a Activation
   * entity.
   */
  message ActivationQuery {
     string sortParams = 1;
  }
  
  /*
   * Define the quick query for a Activation
   * entity.
   */
  message ActivationQuickSearchQuery {
    string quickSearchQuery = 1;
    string sortParams = 2;
  }
  
  /*
   * Activation result page that contains the result of 
   * a request.
   */
  message ActivationResultPage{
    // Amount of elements
    uint32 totalElements  = 1;
    // Number of current page
    uint32 number  = 2;
    // Number of elements in the current page
    uint64 numberOfElements = 3;
    // Page size
    uint64 size = 4;
    // Total number of pages
    uint64 totalPages = 5;
    // Element list
    repeated Activation entities = 6;
  }
  
  /*
   * Request that contains the pagination information and
   * the query parameters.
   */
   message ActivationRequest {
     Page page = 1;
     ActivationQuery query = 2;
   }
   
  /*
   * Request that contains the pagination information and
   * the query parameters for a quick search.
   */
   message ActivationQuickSearchRequest {
     Page page = 1;
     ActivationQuickSearchQuery query = 2;
   }
     
   /*
    * Entities list
    */ 
   message ActivationList {
    repeated Activation entities = 1;
   }
   
    

  // CRUD and Search services
  service ActivationCRUDServices{
    
    // Create Activation
    // @param  : activation to create.
    // @return : the created activation or ALREADY_EXISTS
    rpc SaveActivation(Activation) returns (ActivationSaveResult);

    // Read Activation by id
    // @param  : activation id to read.
    // @return : the activation or NOT_FOUND
    rpc ReadActivation(google.protobuf.StringValue) returns (Activation);
    
    // Update Activation
    // @param  : activation to update.
    // @return : the updated activation or NOT_FOUND
    rpc UpdateActivation (Activation) returns (Activation);
    
    // Delete Activation by id
    // @param  : activation id to delete.
    // @return : empty message or NOT_FOUND
    rpc DeleteActivation(google.protobuf.StringValue) returns (google.protobuf.Empty);
    
    // Get all Activation 
    // @param  : ActivationRequest search request.
    // @return : list of Activation
    rpc GetAllActivation(ActivationRequest) returns (ActivationResultPage);
    
    // Get all entities
    // @param : No param
    // @return : list of Activation
    rpc GetAllActivations(google.protobuf.Empty) returns (ActivationList);
    
    // Quick search Activation 
    // @param  : ActivationQuickSearchRequest quick search request.
    // @return : list of Activation that match the query
    rpc QuickSearchActivation(ActivationQuickSearchRequest) returns (ActivationResultPage);
    
    // Count entities
    // @param : No param
    // @return : number of Activation
    rpc CountActivation(google.protobuf.Empty) returns (google.protobuf.Int64Value);
    
  }
  
